#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Device
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco.BI.Extensions;
    using Disco.Models.Repository;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Device/Show.cshtml")]
    public partial class Show : System.Web.Mvc.WebViewPage<Disco.Web.Models.Device.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Device\Show.cshtml"
  
    ViewBag.Title = Html.ToBreadcrumb("Devices", MVC.Device.Index(), string.Format("Device: {0}", Model.Device.SerialNumber));

    var deviceStatus = Model.Device.Status();

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Device_Show\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"Device_Show_Status\"");

WriteLiteral(">\r\n        <span");

WriteAttribute("class", Tuple.Create(" class=\"", 298), Tuple.Create("\"", 365)
, Tuple.Create(Tuple.Create("", 306), Tuple.Create("icon", 306), true)
, Tuple.Create(Tuple.Create(" ", 310), Tuple.Create("DeviceStatus", 311), true)
            
            #line 9 "..\..\Views\Device\Show.cshtml"
, Tuple.Create(Tuple.Create("", 323), Tuple.Create<System.Object, System.Int32>(deviceStatus.Replace(" ", string.Empty)
            
            #line default
            #line hidden
, 323), false)
);

WriteLiteral("></span>");

            
            #line 9 "..\..\Views\Device\Show.cshtml"
                                                                                    Write(deviceStatus);

            
            #line default
            #line hidden
WriteLiteral("\r\n        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n            $(function () {\r\n                $(\'#Device_Show_Status\').appendTo" +
"(\'#layout_PageHeading\')\r\n            });\r\n        </script>\r\n    </div>\r\n");

WriteLiteral("    ");

            
            #line 16 "..\..\Views\Device\Show.cshtml"
Write(Html.Partial(MVC.Device.Views.DeviceParts._Subject, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
        $(function () {
            var $tabs = $('#DeviceDetailTabs');
            $tabs.tabs({
                activate: function (event, ui) {
                    window.setTimeout(function () {
                        var $window = $(window);
                        var tabHeight = $tabs.height();
                        var tabOffset = $tabs.offset();
                        var windowScrollTop = $window.scrollTop();
                        var windowHeight = $window.height();

                        var tabTopNotShown = windowScrollTop - tabOffset.top;
                        if (tabTopNotShown > 0) {
                            $('html').animate({ scrollTop: tabOffset.top }, 125);
                        } else {
                            var tabBottomNotShown = ((windowScrollTop + windowHeight) - (tabHeight + tabOffset.top)) * -1;
                            if (tabBottomNotShown > 0) {
                                if (tabHeight > windowHeight)
                                    $('html').animate({ scrollTop: tabOffset.top }, 125);
                                else
                                    $('html').animate({ scrollTop: windowScrollTop + tabBottomNotShown }, 125);
                            }
                        }
                    }, 1);
                }
            });
        });
    </script>
    <div");

WriteLiteral(" id=\"DeviceDetailTabs\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" id=\"DeviceDetailTabItems\"");

WriteLiteral("></ul>\r\n");

WriteLiteral("        ");

            
            #line 48 "..\..\Views\Device\Show.cshtml"
   Write(Html.Partial(MVC.Device.Views.DeviceParts._Jobs, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 49 "..\..\Views\Device\Show.cshtml"
   Write(Html.Partial(MVC.Device.Views.DeviceParts._AssignmentHistory, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 50 "..\..\Views\Device\Show.cshtml"
   Write(Html.Partial(MVC.Device.Views.DeviceParts._Resources, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 51 "..\..\Views\Device\Show.cshtml"
   Write(Html.Partial(MVC.Device.Views.DeviceParts._Certificates, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
