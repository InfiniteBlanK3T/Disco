#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Job.JobParts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    
    #line 2 "..\..\Views\Job\JobParts\_Subject.cshtml"
    using Disco.Models.Services.Job;
    
    #line default
    #line hidden
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 3 "..\..\Views\Job\JobParts\_Subject.cshtml"
    using Disco.Services.Users.UserFlags;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Job/JobParts/_Subject.cshtml")]
    public partial class _Subject : Disco.Services.Web.WebViewPage<Disco.Web.Models.Job.ShowModel>
    {
        public _Subject()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\Job\JobParts\_Subject.cshtml"
  
    Authorization.Require(Claims.Job.Show);

            
            #line default
            #line hidden
WriteLiteral("\r\n<table");

WriteLiteral(" id=\"Job_Show_Subjects\"");

WriteLiteral(">\r\n    <tr>\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Dates\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  Opened:\r\n                            </td>\r\n                  " +
"          <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Opened\"");

WriteLiteral(">");

            
            #line 17 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.OpenedDate, Model.Job.OpenedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                        </tr>\r\n");

            
            #line 19 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 19 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (!Model.Job.ClosedDate.HasValue || Model.Job.ExpectedClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           <span");

WriteLiteral(" title=\"Expected to Close\"");

WriteLiteral(">Expected:</span>\r\n                                </td>\r\n                       " +
"         <td>\r\n");

            
            #line 26 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     if (Authorization.Has(Claims.Job.Properties.ExpectedClosedDate))
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(Html.TextBoxFor(m => m.Job.ExpectedClosedDate, "{0:yyyy/MM/dd hh:mm tt}", new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                      
            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                 Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                              
            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                         Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                       

            
            #line default
            #line hidden
WriteLiteral("                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                        $(function () {
                                            var $ajaxSave = $('#Job_ExpectedClosedDate').next('.ajaxSave');
                                            var dateFieldChangeToken = null;
                                            var dateFieldValue = $('#Job_ExpectedClosedDate').val();
                                            $('#Job_ExpectedClosedDate')
                                                .watermark('Unknown')
                                                .datetimepicker({
                                                    ampm: true,
                                                    stepMinute: 1,
                                                    hour: 9,
                                                    minDate: ");

            
            #line 40 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                         Write(Model.Job.OpenedDate.ToJavascriptDate());

            
            #line default
            #line hidden
WriteLiteral(@",
                                                    changeYear: true,
                                                    changeMonth: true,
                                                    dateFormat: 'yy/mm/dd'
                                                }).change(function () {
                                                    var $this = $(this);
                                                    var dateText = $this.val();
                                                    if (dateFieldValue.toLowerCase() != dateText.toLowerCase()) {
                                                        dateFieldValue = dateText;
                                                        if (dateFieldChangeToken)
                                                            window.clearTimeout(dateFieldChangeToken);
                                                        dateFieldChangeToken = window.setTimeout(function () {
                                                            $ajaxSave.hide();
                                                            var $ajaxLoading = $ajaxSave.next('.ajaxLoading').show();
                                                            var data = { ExpectedClosedDate: dateText };
                                                            $.getJSON('");

            
            #line 55 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                   Write(Url.Action(MVC.API.Job.UpdateExpectedClosedDate(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral(@"', data, function (response, result) {
                                                                if (result != 'success' || response != 'OK') {
                                                                    alert('Unable to change Expected Closed Date:\n' + response);
                                                                    $ajaxLoading.hide();
                                                                } else {
                                                                    $ajaxLoading.hide().next('.ajaxOk').show().delay('fast').fadeOut('slow');
                                                                }
                                                            })
                                                            dateFieldChangeToken = null;
                                                        }, 750);
                                                    }
                                                });
                                        });
                                        </script>
");

            
            #line 69 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }
                                    else
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(CommonHelpers.FriendlyDate(Model.Job.ExpectedClosedDate));

            
            #line default
            #line hidden
            
            #line 72 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                 
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </td>\r\n                            </tr>\r\n");

            
            #line 76 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        ");

            
            #line 77 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Model.Job.ClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           Closed:\r\n                                </td>\r\n     " +
"                           <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Closed\"");

WriteLiteral(">");

            
            #line 83 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.ClosedDate, Model.Job.ClosedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                            </tr>\r\n");

            
            #line 85 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </table>\r\n                </div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Type\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                    <h2");

WriteAttribute("title", Tuple.Create(" title=\"", 5778), Tuple.Create("\"", 5807)
            
            #line 89 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 5786), Tuple.Create<System.Object, System.Int32>(Model.Job.JobType.Id
            
            #line default
            #line hidden
, 5786), false)
);

WriteLiteral(">");

            
            #line 89 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n");

            
            #line 92 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 92 "..\..\Views\Job\JobParts\_Subject.cshtml"
                              
                                var jobSubTypeFirst = (int)Math.Ceiling((double)(Model.Job.JobSubTypes.Count + 1) / 2);
                            
            
            #line default
            #line hidden
WriteLiteral("\r\n                            <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_1\"");

WriteLiteral(">\r\n");

            
            #line 97 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Take(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 6395), Tuple.Create("\"", 6417)
            
            #line 99 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 6403), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 6403), false)
);

WriteLiteral(">");

            
            #line 99 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 100 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n                            </td>\r\n       " +
"                     <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_2\"");

WriteLiteral(">\r\n");

            
            #line 105 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 105 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Skip(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 6855), Tuple.Create("\"", 6877)
            
            #line 107 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 6863), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 6863), false)
);

WriteLiteral(">");

            
            #line 107 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 108 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n");

            
            #line 110 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Job.Actions.UpdateSubTypes) && !Model.Job.ClosedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update\"");

WriteLiteral(">Update Sub Types</a>\r\n");

            
            #line 113 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"     </table>\r\n");

            
            #line 117 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 117 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Authorization.Has(Claims.Job.Actions.UpdateSubTypes))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update_Dialog\"");

WriteLiteral(" title=\"Update Job Types\"");

WriteLiteral(">\r\n                            <div>\r\n                                <h2>\r\n");

WriteLiteral("                                    ");

            
            #line 122 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </h2>\r\n");

            
            #line 124 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 using (Html.BeginForm(MVC.API.Job.UpdateSubTypes(Model.Job.Id, redirect: true), FormMethod.Post, new { id = "formUpdateJobTypes" }))
                                {
                                    
            
            #line default
            #line hidden
            
            #line 126 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(CommonHelpers.CheckBoxList("SubTypes", Model.UpdatableJobSubTypes.ToSelectListItems(Model.Job.JobSubTypes.ToList()), 3));

            
            #line default
            #line hidden
            
            #line 126 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                            

            
            #line default
            #line hidden
WriteLiteral("                                    <hr />\r\n");

WriteLiteral("                                    <div>\r\n                                      " +
"  <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" id=\"UpdateJobTypesAddComponents\"");

WriteLiteral(" name=\"AddComponents\"");

WriteLiteral("\r\n                                               checked=\"checked\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"UpdateJobTypesAddComponents\"");

WriteLiteral(">Add Components for newly added Sub Types</label>\r\n                              " +
"      </div>\r\n");

            
            #line 132 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n");

WriteLiteral("                        <script>\r\n                            $(function () {\r\n  " +
"                              var $Job_Show_Job_SubTypes_Update_Dialog = null;\r\n" +
"\r\n                                $(\'#Job_Show_Job_SubTypes_Update\').click(funct" +
"ion () {\r\n                                    if (!$Job_Show_Job_SubTypes_Update" +
"_Dialog) {\r\n                                        $Job_Show_Job_SubTypes_Updat" +
"e_Dialog = $(\'#Job_Show_Job_SubTypes_Update_Dialog\');\r\n                         " +
"               $Job_Show_Job_SubTypes_Update_Dialog.dialog({\r\n                  " +
"                          resizable: false,\r\n                                   " +
"         modal: true,\r\n                                            autoOpen: fal" +
"se,\r\n                                            width: 700,\r\n                  " +
"                          buttons: {\r\n                                          " +
"      \"Save\": function () {\r\n                                                   " +
" $(\'#formUpdateJobTypes\').submit();\r\n                                           " +
"         $Job_Show_Job_SubTypes_Update_Dialog.dialog(\"disable\");\r\n              " +
"                                  },\r\n                                          " +
"      Cancel: function () {\r\n                                                   " +
" $(this).dialog(\"close\");\r\n                                                }\r\n  " +
"                                          }\r\n                                   " +
"     });\r\n                                    }\r\n\r\n                             " +
"       $Job_Show_Job_SubTypes_Update_Dialog.dialog(\'open\');\r\n                   " +
"                 return false;\r\n                                });\r\n           " +
"                 });\r\n                        </script>\r\n");

            
            #line 164 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

            
            #line 166 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Authorization.Has(Claims.Job.Actions.GenerateDocuments))
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_GenerateDocument_Container\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 169 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.Partial(MVC.Shared.Views._GenerateDocumentControl, Model.GenerateDocumentControlModel));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n");

            
            #line 171 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n        </td>\r\n");

            
            #line 174 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 174 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device\"");

WriteLiteral(">\r\n                <div>\r\n                    <h2");

WriteLiteral(" id=\"Job_Show_Device_SerialNumber\"");

WriteLiteral(" title=\"Serial Number\"");

WriteLiteral(">\r\n");

            
            #line 179 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 179 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Authorization.Has(Claims.Device.Show))
                        {
            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    Write(Html.ActionLink(Model.Job.DeviceSerialNumber, MVC.Device.Show(Model.Job.DeviceSerialNumber)));

            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                      }
                    else
                    {
            
            #line default
            #line hidden
            
            #line 182 "..\..\Views\Job\JobParts\_Subject.cshtml"
                Write(Model.Job.DeviceSerialNumber);

            
            #line default
            #line hidden
            
            #line 182 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                  }

            
            #line default
            #line hidden
WriteLiteral("                    </h2>\r\n                    <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" id=\"Job_Show_Device_Model_Image\"");

WriteLiteral(" alt=\"Model Image\"");

WriteAttribute("src", Tuple.Create(" src=\"", 11490), Tuple.Create("\"", 11608)
            
            #line 186 "..\..\Views\Job\JobParts\_Subject.cshtml"
        , Tuple.Create(Tuple.Create("", 11496), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.DeviceModel.Image(Model.Job.Device.DeviceModelId, Model.Job.Device.DeviceModel.ImageHash()))
            
            #line default
            #line hidden
, 11496), false)
);

WriteLiteral(" />\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_ComputerName\"");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral(">");

            
            #line 187 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(Model.Job.Device.ComputerName);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_Model\"");

WriteLiteral(" title=\"Model\"");

WriteLiteral(">");

            
            #line 188 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                     Write(Html.ActionLink(Model.Job.Device.DeviceModel.ToString(), MVC.Config.DeviceModel.Index(Model.Job.Device.DeviceModelId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 189 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 189 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Model.Job.Device.DeviceBatch != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Batch\"");

WriteLiteral(" title=\"Batch\"");

WriteLiteral(">");

            
            #line 191 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                         Write(Html.ActionLink(Model.Job.Device.DeviceBatch.Name, MVC.Config.DeviceBatch.Index(Model.Job.Device.DeviceBatchId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 192 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 194 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 194 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Model.Job.Device.DeviceBatch != null)
                        {
                            if (Model.Job.JobTypeId == JobType.JobTypeIds.HWar)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar\"");

WriteLiteral(">\r\n                                    <div>DEVICE WARRANTY</div>\r\n              " +
"                      <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_ValidUntil\"");

WriteLiteral(" data-livestamp=\"");

            
            #line 200 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                              Write(Model.Job.Device.DeviceBatch.WarrantyValidUntil.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 200 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                             Write(Model.Job.Device.DeviceBatch.WarrantyValidUntil.ToFullDateTime("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 201 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 201 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.WarrantyDetails))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 13300), Tuple.Create("\"", 13365)
, Tuple.Create(Tuple.Create("", 13308), Tuple.Create("Warranty", 13308), true)
, Tuple.Create(Tuple.Create(" ", 13316), Tuple.Create("Details", 13317), true)
, Tuple.Create(Tuple.Create(" ", 13324), Tuple.Create("for", 13325), true)
            
            #line 204 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                        , Tuple.Create(Tuple.Create(" ", 13328), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 13329), false)
);

WriteLiteral(">\r\n                                            <div>");

            
            #line 205 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             Write(new HtmlString(Model.Job.Device.DeviceBatch.WarrantyDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                        </div>\r\n");

WriteLiteral("                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                var d;
                                                $('#Job_Show_Device_Details_HWar_Details_Button').click(function () {
                                                    if (!d)
                                                        d = $('#Job_Show_Device_Details_HWar_Details_Dialog').dialog({
                                                            width: 570,
                                                            modal: true
                                                        });
                                                    else
                                                        d.dialog('open');
                                                    return false;
                                                });
                                            });
                                        </script>
");

            
            #line 222 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n");

            
            #line 224 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }
                            if (Model.Job.JobTypeId == JobType.JobTypeIds.HNWar)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar\"");

WriteLiteral(">\r\n                                    <div>INSURANCE</div>\r\n                    " +
"                <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_InsuranceSupplier\"");

WriteLiteral(">");

            
            #line 229 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                         Write(Model.Job.Device.DeviceBatch.InsuranceSupplier);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                    <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_ValidUntil\"");

WriteLiteral(" data-livestamp=\"");

            
            #line 230 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                               Write(Model.Job.Device.DeviceBatch.InsuredUntil.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 230 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                        Write(Model.Job.Device.DeviceBatch.InsuredUntil.ToFullDateTime("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 231 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.InsuranceDetails))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 15732), Tuple.Create("\"", 15798)
, Tuple.Create(Tuple.Create("", 15740), Tuple.Create("Insurance", 15740), true)
, Tuple.Create(Tuple.Create(" ", 15749), Tuple.Create("Details", 15750), true)
, Tuple.Create(Tuple.Create(" ", 15757), Tuple.Create("for", 15758), true)
            
            #line 234 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                          , Tuple.Create(Tuple.Create(" ", 15761), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 15762), false)
);

WriteLiteral(">\r\n                                            <div>");

            
            #line 235 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             Write(new HtmlString(Model.Job.Device.DeviceBatch.InsuranceDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                        </div>\r\n");

WriteLiteral("                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                var d;
                                                $('#Job_Show_Device_Details_HNWar_Details_Button').click(function () {
                                                    if (!d)
                                                        d = $('#Job_Show_Device_Details_HNWar_Details_Dialog').dialog({
                                                            width: 570,
                                                            modal: true
                                                        });
                                                    else
                                                        d.dialog('open');
                                                    return false;
                                                });
                                            });
                                        </script>
");

            
            #line 252 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n");

            
            #line 254 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

            
            #line 257 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 257 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.DeviceDetails != null && Model.DeviceDetails.Details.Count > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Device_CustomDetails\"");

WriteLiteral(" class=\"status clearfix\"");

WriteLiteral(">\r\n");

            
            #line 260 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var detail in Model.DeviceDetails.Details)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div>\r\n                                    <stron" +
"g>");

            
            #line 263 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                       Write(detail.Key);

            
            #line default
            #line hidden
WriteLiteral(":</strong> ");

            
            #line 263 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                             Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 265 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 267 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 268 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.DeviceHeld.HasValue)
                    {
                        var canEditLocation = Authorization.Has(Claims.Job.Properties.DeviceHeldLocation);

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                                <tr>\r\n                                    <td>" +
"Location:</td>\r\n                                    <td>\r\n                      " +
"                  <span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_Location\"");

WriteLiteral(">\r\n");

            
            #line 277 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 277 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             if (canEditLocation)
                                            {
                                                switch (Model.LocationMode)
                                                {
                                                    case LocationModes.Unrestricted:
                                                    case LocationModes.OptionalList:
                                                        
            
            #line default
            #line hidden
            
            #line 283 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                   Write(Html.TextBoxFor(m => m.Job.DeviceHeldLocation, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 283 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                          
                                                        break;
                                                    case LocationModes.RestrictedList:
                                                        List<SelectListItem> listOptions = new List<SelectListItem>() { new SelectListItem() { Value = "", Text = "<Unknown>" } };
                                                        if (!string.IsNullOrWhiteSpace(Model.Job.DeviceHeldLocation) && !Model.LocationOptions.Any(l => l.Location.Equals(Model.Job.DeviceHeldLocation)))
                                                        {
                                                            listOptions.Add(new SelectListItem() { Value = Model.Job.DeviceHeldLocation, Text = string.Format("Custom: {0}", Model.Job.DeviceHeldLocation) });
                                                        }
                                                        listOptions.AddRange(Model.LocationOptions.Select(l => new SelectListItem() { Value = l.Location, Text = (l.References.Count == 0 ? l.Location : (l.References.Count == 1 ? string.Format("{0} [Job {1}]", l.Location, l.References[0].JobId) : string.Format("{0} [{1} jobs]", l.Location, l.References.Count))) }));
                                                        
            
            #line default
            #line hidden
            
            #line 292 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                   Write(Html.DropDownListFor(m => m.Job.DeviceHeldLocation, listOptions, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 292 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                            ;
                                                        break;
                                                }
                                                
            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                        
            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                   Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                 
                                            }
                                            else if (string.IsNullOrEmpty(Model.Job.DeviceHeldLocation))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None/Unknown&gt;</span>\r\n");

            
            #line 300 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                            }
                                            else
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 303 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                           Write(Model.Job.DeviceHeldLocation);

            
            #line default
            #line hidden
            
            #line 303 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                             
                                            }

            
            #line default
            #line hidden
WriteLiteral(@"                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Held Since:</td>
                                    <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceHeld\"");

WriteLiteral(">");

            
            #line 310 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceHeld, Model.Job.DeviceHeldTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                </tr>\r\n");

            
            #line 312 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 312 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReadyForReturn.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Ready:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReadyForReturn\"");

WriteLiteral(">");

            
            #line 316 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                  Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReadyForReturn, Model.Job.DeviceReadyForReturnTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 318 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 319 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReturnedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Returned:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReturnedDate\"");

WriteLiteral(">");

            
            #line 323 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReturnedDate, Model.Job.DeviceReturnedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 325 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </table>\r\n");

            
            #line 327 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 327 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (canEditLocation)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                    $(function () {\r\n");

            
            #line 331 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 331 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         switch (Model.LocationMode)
                                        {
                                            case LocationModes.Unrestricted:
                                            case LocationModes.OptionalList:

            
            #line default
            #line hidden
WriteLiteral("                                                ");

WriteLiteral(@"
                                        var $deviceHeldLocation = $('#Job_DeviceHeldLocation');
                                        var $ajaxSave = $deviceHeldLocation.next('.ajaxSave');
                                        var autocompleteLoaded = false;

                                        $deviceHeldLocation
                                            .watermark('Unknown')
                                            .focus(function () {
                                                $deviceHeldLocation.select();

                                                // Load AutoComplete
                                                if (!autocompleteLoaded){
                                                    $.ajax({
                                                        url: '");

            
            #line 348 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                          Write(Url.Action(MVC.API.Job.DeviceHeldLocations()));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                                        dataType: \'json\',\r\n  " +
"                                                      success: function (d) {\r\n\r" +
"\n                                                            $.each(d, function(" +
"){\r\n                                                                this.value =" +
" this.Location;\r\n                                                               " +
" this.label = this.Location;\r\n                                                  " +
"          });\r\n\r\n                                                            $de" +
"viceHeldLocation.autocomplete({\r\n                                               " +
"                 source: d,\r\n                                                   " +
"             minLength: 0,\r\n                                                    " +
"            focus: function(e, ui){\r\n                                           " +
"                         return false;\r\n                                        " +
"                        },\r\n                                                    " +
"            select: function (e, ui) {\r\n                                        " +
"                            $deviceHeldLocation.val(ui.item.Location).blur().cha" +
"nge();\r\n                                                                    retu" +
"rn false;\r\n                                                                }\r\n  " +
"                                                          }).data(\'ui-autocomple" +
"te\')._renderItem = function (ul, item) {\r\n                                      " +
"                          var anchor = $(\'<a>\').append($(\'<strong>\').text(item.L" +
"ocation));\r\n                                                                if (" +
"item.References){\r\n                                                             " +
"       anchor.append(document.createTextNode(\' [\'+item.References+\']\'));\r\n      " +
"                                                          }\r\n                   " +
"                                             var item = $(\"<li></li>\")\r\n        " +
"                                                            .data(\"item.autocomp" +
"lete\", item)\r\n                                                                  " +
"  .append(anchor);\r\n                                                            " +
"    return item.appendTo(ul);\r\n                                                 " +
"           };\r\n\r\n                                                            $de" +
"viceHeldLocation.autocomplete(\'search\', \'\');\r\n                                  " +
"                      }\r\n                                                    });" +
"\r\n                                                    autocompleteLoaded = true;" +
"\r\n                                                }else{\r\n                      " +
"                              $deviceHeldLocation.autocomplete(\'search\', \'\');\r\n " +
"                                               }\r\n                              " +
"              })\r\n                                            .keydown(function " +
"(e) {\r\n                                                $ajaxSave.show();\r\n      " +
"                                          if (e.which == 13) {\r\n                " +
"                                    $(this).blur();\r\n                           " +
"                     }\r\n                                            }).blur(func" +
"tion () {\r\n                                                $ajaxSave.hide();\r\n  " +
"                                          })\r\n                                  " +
"          .change(function () {\r\n                                               " +
" $ajaxSave.hide();\r\n                                                $ajaxLoading" +
" = $ajaxSave.next(\'.ajaxLoading\').show();\r\n                                     " +
"           var data = { DeviceHeldLocation: $deviceHeldLocation.val() };\r\n      " +
"                                          $.ajax({\r\n                            " +
"                        url: \'");

            
            #line 399 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                     Write(Url.Action(MVC.API.Job.UpdateDeviceHeldLocation(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral(@"',
                                                    dataType: 'json',
                                                    data: data,
                                                    success: function (d) {
                                                        if (d == 'OK') {
                                                            $ajaxLoading.hide().next('.ajaxOk').show().delay('fast').fadeOut('slow');
                                                        } else {
                                                            $ajaxLoading.hide();
                                                            alert('Unable to update device held location: ' + d);
                                                        }
                                                    },
                                                    error: function (jqXHR, textStatus, errorThrown) {
                                                        alert('Unable to update device held location: ' + textStatus);
                                                        $ajaxLoading.hide();
                                                    }
                                                });
                                            });
                                        ");

WriteLiteral("\r\n");

            
            #line 417 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                break;
                                            case LocationModes.RestrictedList:

            
            #line default
            #line hidden
WriteLiteral("                                                        ");

WriteLiteral(@"
                                        document.DiscoFunctions.PropertyChangeHelper(
                                            $('#Job_DeviceHeldLocation'),
                                            null,
                                            '");

            
            #line 423 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        Write(Url.Action(MVC.API.Job.UpdateDeviceHeldLocation(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                            \'DeviceHeldLocation\');\r\n         " +
"                               ");

WriteLiteral("\r\n");

            
            #line 426 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                break;
                                        }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                    });\r\n                                </sc" +
"ript>\r\n");

            
            #line 432 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 434 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 437 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 438 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User\"");

WriteLiteral(">\r\n                <div>\r\n");

            
            #line 442 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 442 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.HasUserPhoto)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_Photo_Container\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" id=\"Job_Show_User_Photo\"");

WriteAttribute("src", Tuple.Create(" src=\"", 30518), Tuple.Create("\"", 30573)
            
            #line 445 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 30524), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.User.Photo(Model.Job.UserId))
            
            #line default
            #line hidden
, 30524), false)
);

WriteLiteral(" />\r\n                        </div>\r\n");

            
            #line 447 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <h2");

WriteLiteral(" id=\"Job_Show_User_DisplayName\"");

WriteLiteral(" title=\"Display Name\"");

WriteLiteral(">\r\n");

            
            #line 449 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 449 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Authorization.Has(Claims.User.Show))
                        {
            
            #line default
            #line hidden
            
            #line 450 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    Write(Html.ActionLink(Model.Job.User.DisplayName, MVC.User.Show(Model.Job.UserId)));

            
            #line default
            #line hidden
            
            #line 450 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                      }
                    else
                    {
            
            #line default
            #line hidden
            
            #line 452 "..\..\Views\Job\JobParts\_Subject.cshtml"
                Write(Model.Job.User.DisplayName);

            
            #line default
            #line hidden
            
            #line 452 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                    </h2>\r\n                    <div");

WriteLiteral(" id=\"Job_Show_User_Id\"");

WriteLiteral(" title=\"Id\"");

WriteLiteral(">");

            
            #line 454 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                     Write(Model.Job.User.FriendlyId());

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 455 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 455 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Authorization.Has(Claims.User.ShowDetails))
                    {
                        if (!string.IsNullOrWhiteSpace(Model.Job.User.PhoneNumber))
                        {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_PhoneNumber\"");

WriteLiteral(" title=\"Phone Number\"");

WriteLiteral(">Phone: ");

            
            #line 458 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(Model.Job.User.PhoneNumber);

            
            #line default
            #line hidden
WriteLiteral("</div>");

            
            #line 458 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                          }
                    if (!string.IsNullOrWhiteSpace(Model.Job.User.EmailAddress))
                    {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_EmailAddress\"");

WriteLiteral(" title=\"Email Address\"");

WriteLiteral(">Email: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 31556), Tuple.Create("\"", 31600)
, Tuple.Create(Tuple.Create("", 31563), Tuple.Create("mailto:", 31563), true)
            
            #line 460 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       , Tuple.Create(Tuple.Create("", 31570), Tuple.Create<System.Object, System.Int32>(Model.Job.User.EmailAddress
            
            #line default
            #line hidden
, 31570), false)
);

WriteLiteral(">");

            
            #line 460 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                  Write(Model.Job.User.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("</a></div>");

            
            #line 460 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                             }
            }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 462 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Authorization.Has(Claims.User.ShowFlagAssignments))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_Flags\"");

WriteLiteral(">\r\n");

            
            #line 465 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 465 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var flag in Model.Job.User.UserFlagAssignments.Where(f => !f.RemovedDate.HasValue).Select(f => Tuple.Create(f, UserFlagService.GetUserFlag(f.UserFlagId))))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <i");

WriteAttribute("class", Tuple.Create(" class=\"", 32075), Tuple.Create("\"", 32145)
, Tuple.Create(Tuple.Create("", 32083), Tuple.Create("flag", 32083), true)
, Tuple.Create(Tuple.Create(" ", 32087), Tuple.Create("fa", 32088), true)
, Tuple.Create(Tuple.Create(" ", 32090), Tuple.Create("fa-", 32091), true)
            
            #line 467 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 32094), Tuple.Create<System.Object, System.Int32>(flag.Item2.Icon
            
            #line default
            #line hidden
, 32094), false)
, Tuple.Create(Tuple.Create(" ", 32112), Tuple.Create("fa-fw", 32113), true)
, Tuple.Create(Tuple.Create(" ", 32118), Tuple.Create("d-", 32119), true)
            
            #line 467 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 32121), Tuple.Create<System.Object, System.Int32>(flag.Item2.IconColour
            
            #line default
            #line hidden
, 32121), false)
);

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                                        <span");

WriteLiteral(" class=\"name\"");

WriteLiteral(">");

            
            #line 469 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                      Write(flag.Item2.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 469 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                   if (flag.Item1.Comments != null)
                                        {
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"comments\"");

WriteLiteral(">");

            
            #line 470 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                           Write(flag.Item1.Comments.ToHtmlComment());

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 470 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                           }
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"added\"");

WriteLiteral(">");

            
            #line 470 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                           Write(CommonHelpers.FriendlyDateAndUser(flag.Item1.AddedDate, flag.Item1.AddedUserId));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                    </span>\r\n                           " +
"     </i>\r\n");

            
            #line 473 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                $(function () {\r\n                             " +
"       $(\'#Job_Show_User_Flags\')\r\n                                        .toolt" +
"ip({\r\n                                            items: \'i.flag\',\r\n            " +
"                                content: function () {\r\n                        " +
"                        var $this = $(this);\r\n                                  " +
"              return $this.children(\'.details\').html();\r\n                       " +
"                     },\r\n                                            tooltipClas" +
"s: \'User_FlagAssignment_Tooltip\',\r\n                                            p" +
"osition: {\r\n                                                my: \"right top\",\r\n  " +
"                                              at: \"right bottom\",\r\n             " +
"                                   collision: \"flipfit flip\"\r\n                  " +
"                          },\r\n                                            hade: " +
"{\r\n                                                effect: \'\'\r\n                 " +
"                           },\r\n                                            close" +
": function (e, ui) {\r\n                                                ui.tooltip" +
".hover(\r\n                                                    function () {\r\n    " +
"                                                    $(this).stop(true).fadeTo(10" +
"0, 1);\r\n                                                    },\r\n                " +
"                                    function () {\r\n                             " +
"                           $(this).fadeOut(100, function () { $(this).remove(); " +
"});\r\n                                                    });\r\n                  " +
"                          }\r\n                                        });\r\n      " +
"                          });\r\n                            </script>\r\n          " +
"              </div>\r\n");

            
            #line 505 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 506 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.WaitingForUserAction.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_WaitingForUserAction\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <h4>Awaiting Action</h4>\r\n                        " +
"    Since: <span");

WriteLiteral(" data-livestamp=\"");

            
            #line 510 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    Write(Model.Job.WaitingForUserAction.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 510 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                  Write(Model.Job.WaitingForUserAction.ToFullDateTime());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                        </div>\r\n");

            
            #line 512 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 513 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.UserDetails != null && Model.UserDetails.Details.Count > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_CustomDetails\"");

WriteLiteral(" class=\"status clearfix\"");

WriteLiteral(">\r\n");

            
            #line 516 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 516 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var detail in Model.UserDetails.Details)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div>\r\n                                    <stron" +
"g>");

            
            #line 519 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                       Write(detail.Key);

            
            #line default
            #line hidden
WriteLiteral(":</strong> ");

            
            #line 519 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                             Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 521 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 523 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 526 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n    <tr");

WriteLiteral(" id=\"Job_Show_Subjects_Actions\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job_Actions\"");

WriteLiteral(">\r\n");

            
            #line 530 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 530 "..\..\Views\Job\JobParts\_Subject.cshtml"
              
                List<string> CanCloseForcedReasons;
                if (Model.Job.CanCloseForced(out CanCloseForcedReasons))
                {
                    
            
            #line default
            #line hidden
            
            #line 534 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Forcibly Close", MVC.API.Job.Close(Model.Job.Id, true), "Job_Show_Job_Actions_ForceClose_Button"));

            
            #line default
            #line hidden
            
            #line 534 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                  

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ForceClose_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Forcibly Close this Job?\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"info-box error\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-exclamation-circle\"");

WriteLiteral("></i><strong>Are you sure?</strong>\r\n                            </p>\r\n          " +
"                  <ul>\r\n");

            
            #line 541 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 541 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 foreach (var reason in CanCloseForcedReasons)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <li>");

            
            #line 543 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(reason);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 544 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </ul>\r\n                        </div>\r\n");

            
            #line 547 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 547 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.ForceClose(Model.Job.Id, null, true)))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Reason:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 553 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_Job_Actions_ForceClose_Button\');\r\n                            v" +
"ar buttonDialog = null;\r\n\r\n                            button.click(function () " +
"{\r\n                                if (!buttonDialog) {\r\n                       " +
"             buttonDialog = $(\'#Job_Show_Job_Actions_ForceClose_Dialog\');\r\n     " +
"                               buttonDialog.dialog({\r\n                          " +
"              resizable: false,\r\n                                        modal: " +
"true,\r\n                                        autoOpen: false,\r\n               " +
"                         buttons: {\r\n                                           " +
" \"Forcibly Close Job\": function () {\r\n                                          " +
"      var $this = $(this);\r\n                                                $thi" +
"s.dialog(\"disable\");\r\n                                                $this.dial" +
"og(\"option\", \"buttons\", null);\r\n                                                " +
"$this.find(\'form\').submit();\r\n                                            },\r\n  " +
"                                          Cancel: function () {\r\n               " +
"                                 $(this).dialog(\"close\");\r\n                     " +
"                       }\r\n                                        }\r\n           " +
"                         });\r\n                                }\r\n\r\n             " +
"                   buttonDialog.dialog(\'open\');\r\n                               " +
" return false;\r\n                            });\r\n                        });\r\n  " +
"                  </script>\r\n");

            
            #line 586 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }
            
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 589 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 589 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanCloseNormally())
            {
                
            
            #line default
            #line hidden
            
            #line 591 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Close", MVC.API.Job.Close(Model.Job.Id, true), "Job_Show_Job_Actions_Close_Button"));

            
            #line default
            #line hidden
            
            #line 591 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Close_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Close this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;Are you sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Close_Button\');\r\n                        var buttonDialog =" +
" null;\r\n                        var buttonLink = button.attr(\'href\');\r\n         " +
"               button.attr(\'href\', \'#\').click(function () {\r\n                   " +
"         if (!buttonDialog) {\r\n                                buttonDialog = $(" +
"\'#Job_Show_Job_Actions_Close_Dialog\');\r\n                                buttonDi" +
"alog.dialog({\r\n                                    resizable: false,\r\n          " +
"                          modal: true,\r\n                                    auto" +
"Open: false,\r\n                                    buttons: {\r\n                  " +
"                      \"Close Job\": function () {\r\n                              " +
"              var $this = $(this);\r\n                                            " +
"$this.dialog(\"disable\");\r\n                                            $this.dial" +
"og(\"option\", \"buttons\", null);\r\n                                            wind" +
"ow.location.href = buttonLink;\r\n                                        },\r\n    " +
"                                    Cancel: function () {\r\n                     " +
"                       $(this).dialog(\"close\");\r\n                               " +
"         }\r\n                                    }\r\n                             " +
"   });\r\n                            }\r\n\r\n                            buttonDialo" +
"g.dialog(\'open\');\r\n                            return false;\r\n                  " +
"      });\r\n                    });\r\n                </script>\r\n");

            
            #line 628 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 629 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanReopen())
            {
                
            
            #line default
            #line hidden
            
            #line 631 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Reopen Job", MVC.API.Job.Reopen(Model.Job.Id, true), "Job_Show_Job_Actions_Reopen_Button"));

            
            #line default
            #line hidden
            
            #line 631 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                       

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Reopen_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Reopen this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;Are you sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Reopen_Button\');\r\n                        var buttonDialog " +
"= null;\r\n                        var buttonLink = button.attr(\'href\');\r\n        " +
"                button.attr(\'href\', \'#\');\r\n                        button.click(" +
"function () {\r\n                            if (!buttonDialog) {\r\n               " +
"                 buttonDialog = $(\'#Job_Show_Job_Actions_Reopen_Dialog\');\r\n     " +
"                           buttonDialog.dialog({\r\n                              " +
"      resizable: false,\r\n                                    modal: true,\r\n     " +
"                               autoOpen: false,\r\n                               " +
"     buttons: {\r\n                                        \"Reopen\": function () {" +
"\r\n                                            var $this = $(this);\r\n            " +
"                                $this.dialog(\"disable\");\r\n                      " +
"                      $this.dialog(\"option\", \"buttons\", null);\r\n                " +
"                            window.location.href = buttonLink;\r\n                " +
"                        },\r\n                                        Cancel: func" +
"tion () {\r\n                                            $(this).dialog(\"close\");\r" +
"\n                                        }\r\n                                    " +
"}\r\n                                });\r\n                            }\r\n\r\n       " +
"                     buttonDialog.dialog(\'open\');\r\n                            r" +
"eturn false;\r\n                        });\r\n                    });\r\n            " +
"    </script>\r\n");

            
            #line 669 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 670 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanDelete())
            {
                
            
            #line default
            #line hidden
            
            #line 672 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Delete", MVC.API.Job.Delete(Model.Job.Id, true), "Job_Show_Job_Actions_Delete_Button"));

            
            #line default
            #line hidden
            
            #line 672 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                   

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;This item will be permanently deleted and cannot be recovered. Are you" +
" sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Delete_Button\');\r\n                        var buttonDialog " +
"= null;\r\n                        var buttonLink = button.attr(\'href\');\r\n        " +
"                button.attr(\'href\', \'#\');\r\n                        button.click(" +
"function () {\r\n                            if (!buttonDialog) {\r\n               " +
"                 buttonDialog = $(\'#Job_Show_Job_Actions_Delete_Dialog\');\r\n     " +
"                           buttonDialog.dialog({\r\n                              " +
"      resizable: false,\r\n                                    modal: true,\r\n     " +
"                               autoOpen: false,\r\n                               " +
"     buttons: {\r\n                                        \"Delete\": function () {" +
"\r\n                                            var $this = $(this);\r\n            " +
"                                $this.dialog(\"disable\");\r\n                      " +
"                      $this.dialog(\"option\", \"buttons\", null);\r\n                " +
"                            window.location.href = buttonLink;\r\n                " +
"                        },\r\n                                        Cancel: func" +
"tion () {\r\n                                            $(this).dialog(\"close\");\r" +
"\n                                        }\r\n                                    " +
"}\r\n                                });\r\n                            }\r\n\r\n       " +
"                     buttonDialog.dialog(\'open\');\r\n                            r" +
"eturn false;\r\n                        });\r\n                    });\r\n            " +
"    </script>\r\n");

            
            #line 710 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 711 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanAddQueues() && Model.AvailableQueues != null && Model.AvailableQueues.Count > 0)
            {

                var priorityValue = JobQueuePriority.Normal.ToString();
                var priorityItems = Enum.GetNames(typeof(JobQueuePriority)).Select(i => new SelectListItem() { Text = i, Value = i, Selected = (i == priorityValue) }).ToList();

                var slaOptions = Disco.Services.Jobs.JobQueues.JobQueueService.SlaOptions.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList();

                
            
            #line default
            #line hidden
            
            #line 719 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Add to Queue", MVC.API.JobQueueJob.AddJob(), "Job_Show_Job_Actions_AddQueue_Button"));

            
            #line default
            #line hidden
            
            #line 719 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                 

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Add Job to Queue\"");

WriteLiteral(">\r\n");

            
            #line 721 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 721 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.JobQueueJob.AddJob()))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <input");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog_Id\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"id\"");

WriteLiteral(" />\r\n");

WriteLiteral("                        <input");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog_JobId\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"JobId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 46423), Tuple.Create("\"", 46444)
            
            #line 724 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                , Tuple.Create(Tuple.Create("", 46431), Tuple.Create<System.Object, System.Int32>(Model.Job.Id
            
            #line default
            #line hidden
, 46431), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"queuePicker\"");

WriteLiteral(">\r\n");

            
            #line 726 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 726 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var jobQueue in Model.AvailableQueues.OrderBy(jq => jq.Name))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"queue\"");

WriteLiteral(" data-queueid=\"");

            
            #line 728 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                             Write(jobQueue.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-queuesla=\"");

            
            #line 728 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                            Write(jobQueue.DefaultSLAExpiry.HasValue ? jobQueue.DefaultSLAExpiry.Value.ToString() : null);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-queuepriority=\"");

            
            #line 728 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                           Write(jobQueue.Priority.ToString());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 46913), Tuple.Create("\"", 46980)
, Tuple.Create(Tuple.Create("", 46921), Tuple.Create("fa", 46921), true)
, Tuple.Create(Tuple.Create(" ", 46923), Tuple.Create("fa-", 46924), true)
            
            #line 729 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 46927), Tuple.Create<System.Object, System.Int32>(jobQueue.Icon
            
            #line default
            #line hidden
, 46927), false)
, Tuple.Create(Tuple.Create(" ", 46943), Tuple.Create("fa-fw", 46944), true)
, Tuple.Create(Tuple.Create(" ", 46949), Tuple.Create("fa-lg", 46950), true)
, Tuple.Create(Tuple.Create(" ", 46955), Tuple.Create("d-", 46956), true)
            
            #line 729 "..\..\Views\Job\JobParts\_Subject.cshtml"
   , Tuple.Create(Tuple.Create("", 46958), Tuple.Create<System.Object, System.Int32>(jobQueue.IconColour
            
            #line default
            #line hidden
, 46958), false)
);

WriteLiteral("></i>");

            
            #line 729 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                          Write(jobQueue.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 731 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                            <div>\r\n                                <h4>Job Pri" +
"ority</h4>\r\n");

WriteLiteral("                                ");

            
            #line 736 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(Html.DropDownList("Priority", priorityItems, new { id = "Job_Show_Job_Actions_AddQueue_Priority" }));

            
            #line default
            #line hidden
WriteLiteral(" <i");

WriteAttribute("class", Tuple.Create(" class=\"", 47377), Tuple.Create("\"", 47425)
, Tuple.Create(Tuple.Create("", 47385), Tuple.Create("fa", 47385), true)
, Tuple.Create(Tuple.Create(" ", 47387), Tuple.Create("d-priority-", 47388), true)
            
            #line 736 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                             , Tuple.Create(Tuple.Create("", 47399), Tuple.Create<System.Object, System.Int32>(priorityValue.ToLower()
            
            #line default
            #line hidden
, 47399), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 47426), Tuple.Create("\"", 47459)
            
            #line 736 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                , Tuple.Create(Tuple.Create("", 47434), Tuple.Create<System.Object, System.Int32>(priorityValue
            
            #line default
            #line hidden
, 47434), false)
, Tuple.Create(Tuple.Create(" ", 47450), Tuple.Create("Priority", 47451), true)
);

WriteLiteral("></i>\r\n                            </div>\r\n                            <div>\r\n   " +
"                             <h4>SLA Target</h4>\r\n");

WriteLiteral("                                ");

            
            #line 740 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(Html.DropDownList("SLAExpiresMinutes", slaOptions, new { id = "Job_Show_Job_Actions_AddQueue_SLAExpiresMinutes" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                            <div>\r\n        " +
"                        <h4>Tasks/Comment</h4>\r\n                                " +
"<textarea");

WriteLiteral(" name=\"Comment\"");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Comment\"");

WriteLiteral("></textarea>\r\n                            </div>\r\n                        </div>\r" +
"\n");

            
            #line 747 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_AddQueue_Button\');\r\n                        var buttonDialo" +
"g = null;\r\n                        var buttonLink = button.attr(\'href\');\r\n\r\n    " +
"                    var queuePicker = null;\r\n                        var queueId" +
" = null;\r\n                        var details = null;\r\n\r\n                       " +
" function queueSelected() {\r\n                            var queue = $(this);\r\n\r" +
"\n                            queuePicker.children().removeClass(\'selected\');\r\n  " +
"                          queue.addClass(\'selected\');\r\n\r\n                       " +
"     queueId.val(queue.attr(\'data-queueid\'));\r\n\r\n                            var" +
" queueSLA = queue.attr(\'data-queuesla\');\r\n                            if (!queue" +
"SLA)\r\n                                queueSLA = 0;\r\n\r\n                         " +
"   $(\'#Job_Show_Job_Actions_AddQueue_Priority\').val(\'Normal\');\r\n                " +
"            $(\'#Job_Show_Job_Actions_AddQueue_SLAExpiresMinutes\').val(queueSLA);" +
"\r\n\r\n                            details.show();\r\n\r\n                            $" +
"(\'#Job_Show_Job_Actions_AddQueue_Comment\').focus().select();\r\n                  " +
"      }\r\n\r\n                        button.attr(\'href\', \'#\').click(function (e) {" +
"\r\n                            e.preventDefault();\r\n\r\n                           " +
" if (!buttonDialog) {\r\n                                buttonDialog = $(\'#Job_Sh" +
"ow_Job_Actions_AddQueue_Dialog\');\r\n                                buttonDialog." +
"dialog({\r\n                                    width: 600,\r\n                     " +
"               height: 410,\r\n                                    resizable: fals" +
"e,\r\n                                    modal: true,\r\n                          " +
"          autoOpen: false,\r\n                                    buttons: {\r\n    " +
"                                    Cancel: function () {\r\n                     " +
"                       $(this).dialog(\"close\");\r\n                               " +
"         },\r\n                                        \"Add to Queue\": function ()" +
" {\r\n                                            if (!!queueId.val()) {\r\n        " +
"                                        var $this = $(this);\r\n                  " +
"                              $this.dialog(\"disable\");\r\n                        " +
"                        $this.dialog(\"option\", \"buttons\", null);\r\n              " +
"                                  buttonDialog.find(\'form\').submit();\r\n         " +
"                                   } else {\r\n                                   " +
"             alert(\'Select a Job Queue\');\r\n                                     " +
"       }\r\n                                        }\r\n                           " +
"         }\r\n                                });\r\n\r\n                             " +
"   queuePicker = buttonDialog.find(\'.queuePicker\');\r\n                           " +
"     queueId = $(\'#Job_Show_Job_Actions_AddQueue_Dialog_Id\');\r\n                 " +
"               details = buttonDialog.find(\'.details\');\r\n\r\n                     " +
"           var priorityList = $(\'#Job_Show_Job_Actions_AddQueue_Priority\');\r\n   " +
"                             priorityList.change(function () {\r\n                " +
"                    var icon = priorityList.closest(\'div\').find(\'i\').first();\r\n " +
"                                   icon[0].className = \'\';\r\n                    " +
"                icon.addClass(\'fa d-priority-\' + priorityList.val().toLowerCase(" +
")).attr(\'title\', priorityList.val() + \' Priority\');\r\n                           " +
"     });\r\n\r\n                                queuePicker.on(\'click\', \'div.queue\'," +
" queueSelected);\r\n                            }\r\n\r\n                            b" +
"uttonDialog.dialog(\'open\');\r\n                            return false;\r\n        " +
"                });\r\n                    });\r\n                </script>\r\n");

            
            #line 826 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 827 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogWarranty())
            {
                
            
            #line default
            #line hidden
            
            #line 829 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Log Warranty", MVC.Job.LogWarranty(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogWarranty_Button"));

            
            #line default
            #line hidden
            
            #line 829 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 831 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanWarrantyCompleted())
            {
                
            
            #line default
            #line hidden
            
            #line 833 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Warranty Complete", MVC.API.Job.UpdateWarrantyExternalCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_WarrantyComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 833 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 835 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanInsuranceClaimFormSent())
            {
                
            
            #line default
            #line hidden
            
            #line 837 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Insurance Claim Sent", MVC.API.Job.UpdateInsuranceClaimFormSentDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_InsuranceClaimSent_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 837 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                       
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 839 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogRepair())
            {
                
            
            #line default
            #line hidden
            
            #line 841 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Log Repair", MVC.Job.LogRepair(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogRepair_Button"));

            
            #line default
            #line hidden
            
            #line 841 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                               
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 843 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanRepairComplete())
            {
                
            
            #line default
            #line hidden
            
            #line 845 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Repairs Complete", MVC.API.Job.UpdateNonWarrantyRepairerCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_RepairComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 845 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 847 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanConvertHWarToHNWar())
            {
                
            
            #line default
            #line hidden
            
            #line 849 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Convert to Non-Warranty", MVC.API.Job.ConvertHWarToHNWar(Model.Job.Id, true), "Job_Show_Job_Actions_ConvertToHNWar_Button"));

            
            #line default
            #line hidden
            
            #line 849 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                        

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ConvertToHNWar_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Convert this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;This process is not reversible.<br />\r\n                        Are you" +
" sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_ConvertToHNWar_Button\');\r\n                        var butto" +
"nDialog = null;\r\n                        var buttonLink = button.attr(\'href\');\r\n" +
"                        button.attr(\'href\', \'#\');\r\n                        butto" +
"n.click(function () {\r\n                            if (!buttonDialog) {\r\n       " +
"                         buttonDialog = $(\'#Job_Show_Job_Actions_ConvertToHNWar_" +
"Dialog\');\r\n                                buttonDialog.dialog({\r\n              " +
"                      resizable: false,\r\n                                    mod" +
"al: true,\r\n                                    autoOpen: false,\r\n               " +
"                     buttons: {\r\n                                        \"Conver" +
"t\": function () {\r\n                                            var $this = $(thi" +
"s);\r\n                                            $this.dialog(\"disable\");\r\n     " +
"                                       $this.dialog(\"option\", \"buttons\", null);\r" +
"\n                                            window.location.href = buttonLink;\r" +
"\n                                        },\r\n                                   " +
"     Cancel: function () {\r\n                                            $(this)." +
"dialog(\"close\");\r\n                                        }\r\n                   " +
"                 }\r\n                                });\r\n                       " +
"     }\r\n\r\n                            buttonDialog.dialog(\'open\');\r\n            " +
"                return false;\r\n                        });\r\n\r\n                  " +
"  });\r\n                </script>\r\n");

            
            #line 889 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </td>\r\n");

            
            #line 891 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 891 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device_Actions\"");

WriteLiteral(">\r\n");

            
            #line 894 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 894 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceHeld())
                {
                    
            
            #line default
            #line hidden
            
            #line 896 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Device Held", MVC.API.Job.DeviceHeld(Model.Job.Id, true), "Job_Show_Device_Actions_Held_Button"));

            
            #line default
            #line hidden
            
            #line 896 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                 
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 898 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReadyForReturn())
                {
                    
            
            #line default
            #line hidden
            
            #line 900 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Device Ready For Return", MVC.API.Job.DeviceReadyForReturn(Model.Job.Id, true), "Job_Show_Device_Actions_DeviceReadyForReturn_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 900 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 902 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReturned())
                {
                    
            
            #line default
            #line hidden
            
            #line 904 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Device Returned", MVC.API.Job.DeviceReturned(Model.Job.Id, true), "Job_Show_Device_Actions_DeviceReturned_Button", Model.Job.CanDeviceReadyForReturn() ? null : "alert"));

            
            #line default
            #line hidden
            
            #line 904 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                                         
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n");

            
            #line 907 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 908 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User_Actions\"");

WriteLiteral(">\r\n\r\n\r\n");

            
            #line 913 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 913 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanWaitingForUserAction())
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Awaiting User Action</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 917 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 917 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.WaitingForUserAction(Model.Job.Id, null, true)))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Reason:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 923 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_WaitingForUserAction_Button\');\r\n                  " +
"          var buttonDialog = null;\r\n\r\n                            button.click(f" +
"unction () {\r\n                                if (!buttonDialog) {\r\n            " +
"                        buttonDialog = $(\'#Job_Show_User_Actions_WaitingForUserA" +
"ction_Dialog\');\r\n                                    buttonDialog.dialog({\r\n    " +
"                                    resizable: false,\r\n                         " +
"               modal: true,\r\n                                        autoOpen: f" +
"alse,\r\n                                        buttons: {\r\n                     " +
"                       \"Waiting for User Action\": function () {\r\n               " +
"                                 var $this = $(this);\r\n                         " +
"                       $this.dialog(\"disable\");\r\n                               " +
"                 $this.dialog(\"option\", \"buttons\", null);\r\n                     " +
"                           $this.find(\'form\').submit();\r\n                       " +
"                     },\r\n                                            Cancel: fun" +
"ction () {\r\n                                                $(this).dialog(\"clos" +
"e\");\r\n                                            }\r\n                           " +
"             }\r\n                                    });\r\n                       " +
"         }\r\n\r\n                                buttonDialog.dialog(\'open\');\r\n    " +
"                            return false;\r\n                            });\r\n    " +
"                    });\r\n                    </script>\r\n");

            
            #line 956 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 957 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanNotWaitingForUserAction())
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button alert small\"");

WriteLiteral(">User Action Resolved</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Not Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 961 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 961 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.NotWaitingForUserAction(Model.Job.Id, null, true)))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Resolution:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Resolution\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 967 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_NotWaitingForUserAction_Button\');\r\n               " +
"             var buttonDialog = null;\r\n\r\n                            button.clic" +
"k(function () {\r\n                                if (!buttonDialog) {\r\n         " +
"                           buttonDialog = $(\'#Job_Show_User_Actions_NotWaitingFo" +
"rUserAction_Dialog\');\r\n                                    buttonDialog.dialog({" +
"\r\n                                        resizable: false,\r\n                   " +
"                     height: 240,\r\n                                        modal" +
": true,\r\n                                        autoOpen: false,\r\n             " +
"                           buttons: {\r\n                                         " +
"   \"Not Waiting for User Action\": function () {\r\n                               " +
"                 var $this = $(this);\r\n                                         " +
"       $this.dialog(\"disable\");\r\n                                               " +
" $this.dialog(\"option\", \"buttons\", null);\r\n                                     " +
"           $this.find(\'form\').submit();\r\n                                       " +
"     },\r\n                                            Cancel: function () {\r\n    " +
"                                            $(this).dialog(\"close\");\r\n          " +
"                                  }\r\n                                        }\r\n" +
"                                    });\r\n                                }\r\n\r\n  " +
"                              buttonDialog.dialog(\'open\');\r\n                    " +
"            return false;\r\n                            });\r\n                    " +
"    });\r\n                    </script>\r\n");

            
            #line 1001 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n");

            
            #line 1004 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n</table>\r\n");

        }
    }
}
#pragma warning restore 1591
