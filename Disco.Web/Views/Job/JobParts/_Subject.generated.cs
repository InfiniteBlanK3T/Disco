#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Job.JobParts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco.BI.Extensions;
    using Disco.Models.Repository;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.4.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Job/JobParts/_Subject.cshtml")]
    public partial class Subject : System.Web.Mvc.WebViewPage<Disco.Web.Models.Job.ShowModel>
    {
        public Subject()
        {
        }
        public override void Execute()
        {
WriteLiteral("<table");

WriteLiteral(" id=\"Job_Show_Subjects\"");

WriteLiteral(">\r\n    <tr>\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Dates\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>Opened:\r\n       " +
"                     </td>\r\n                            <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Opened\"");

WriteLiteral(">");

            
            #line 12 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.OpenedDate, Model.Job.OpenedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                        </tr>\r\n");

            
            #line 14 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 14 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (!Model.Job.ClosedDate.HasValue || Model.Job.ExpectedClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           <span");

WriteLiteral(" title=\"Expected to Close\"");

WriteLiteral(">Expected:</span>\r\n                                </td>\r\n                       " +
"         <td>");

            
            #line 20 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(Html.TextBoxFor(m => m.Job.ExpectedClosedDate, new { @class = "small discreet" }));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 20 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                  Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 20 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                          Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                        $(function () {
                                            var $ajaxSave = $('#Job_ExpectedClosedDate').next('.ajaxSave');
                                            var dateFieldChangeToken = null;
                                            var dateFieldValue = $('#Job_ExpectedClosedDate').val();
                                            $('#Job_ExpectedClosedDate')
                                                .watermark('Unknown')
                                                .datetimepicker({
                                                    ampm: true,
                                                    stepMinute: 1,
                                                    hour: 9,
                                                    minDate: ");

            
            #line 32 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                         Write(Model.Job.OpenedDate.ToJavascriptDate());

            
            #line default
            #line hidden
WriteLiteral(@",
                                                    changeYear: true,
                                                    changeMonth: true,
                                                    dateFormat: 'yy/mm/dd'
                                                }).change(function () {
                                                    var $this = $(this);
                                                    var dateText = $this.val();
                                                    if (dateFieldValue.toLowerCase() != dateText.toLowerCase()) {
                                                        dateFieldValue = dateText;
                                                        if (dateFieldChangeToken)
                                                            window.clearTimeout(dateFieldChangeToken);
                                                        dateFieldChangeToken = window.setTimeout(function () {
                                                            $ajaxSave.hide();
                                                            var $ajaxLoading = $ajaxSave.next('.ajaxLoading').show();
                                                            var data = { ExpectedClosedDate: dateText };
                                                            $.getJSON('");

            
            #line 47 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                   Write(Url.Action(MVC.API.Job.UpdateExpectedClosedDate(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral(@"', data, function (response, result) {
                                                                if (result != 'success' || response != 'OK') {
                                                                    alert('Unable to change Expected Closed Date:\n' + response);
                                                                    $ajaxLoading.hide();
                                                                } else {
                                                                    $ajaxLoading.hide().next('.ajaxOk').show().delay('fast').fadeOut('slow');
                                                                }
                                                            })
                                                            dateFieldChangeToken = null;
                                                        }, 750);
                                                    }
                                                });
                                        });
                                    </script>
                                </td>
                            </tr>
");

            
            #line 63 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        ");

            
            #line 64 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Model.Job.ClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>Closed:\r\n  " +
"                              </td>\r\n                                <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Closed\"");

WriteLiteral(">");

            
            #line 69 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.ClosedDate, Model.Job.ClosedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                            </tr>\r\n");

            
            #line 71 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </table>\r\n                </div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Type\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                    <h2");

WriteAttribute("title", Tuple.Create(" title=\"", 5104), Tuple.Create("\"", 5133)
            
            #line 75 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 5112), Tuple.Create<System.Object, System.Int32>(Model.Job.JobType.Id
            
            #line default
            #line hidden
, 5112), false)
);

WriteLiteral(">");

            
            #line 75 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n");

            
            #line 78 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 78 "..\..\Views\Job\JobParts\_Subject.cshtml"
                              
                                var jobSubTypeFirst = (int)Math.Ceiling((double)(Model.Job.JobSubTypes.Count + 1) / 2);
                            
            
            #line default
            #line hidden
WriteLiteral("\r\n                            <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_1\"");

WriteLiteral(">\r\n");

            
            #line 83 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 83 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Take(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 5721), Tuple.Create("\"", 5743)
            
            #line 85 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 5729), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 5729), false)
);

WriteLiteral(">");

            
            #line 85 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 86 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n                            </td>\r\n       " +
"                     <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_2\"");

WriteLiteral(">\r\n");

            
            #line 91 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Skip(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 6181), Tuple.Create("\"", 6203)
            
            #line 93 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 6189), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 6189), false)
);

WriteLiteral(">");

            
            #line 93 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 94 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n");

            
            #line 96 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (!Model.Job.ClosedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update\"");

WriteLiteral(">Update Sub Types</a>\r\n");

            
            #line 99 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"     </table>\r\n                    <div");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update_Dialog\"");

WriteLiteral(" title=\"Update Job Types\"");

WriteLiteral(">\r\n                        <div>\r\n                            <h2>\r\n");

WriteLiteral("                                ");

            
            #line 106 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n");

            
            #line 107 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 107 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             using (Html.BeginForm(MVC.API.Job.UpdateSubTypes(Model.Job.Id, redirect: true), FormMethod.Post, new { id = "formUpdateJobTypes" }))
                            {
                                
            
            #line default
            #line hidden
            
            #line 109 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(CommonHelpers.CheckBoxList("SubTypes", Model.UpdatableJobSubTypes.ToSelectListItems(Model.Job.JobSubTypes.ToList()), 3));

            
            #line default
            #line hidden
            
            #line 109 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                            

            
            #line default
            #line hidden
WriteLiteral("                                <hr />\r\n");

WriteLiteral("                                <div>\r\n                                    <input" +
"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" id=\"UpdateJobTypesAddComponents\"");

WriteLiteral(" name=\"AddComponents\"");

WriteLiteral("\r\n                                        checked=\"checked\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"UpdateJobTypesAddComponents\"");

WriteLiteral(">Add Components for newly added Sub Types</label>\r\n                              " +
"  </div>\r\n");

            
            #line 115 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                    </div>\r\n                    <" +
"script>\r\n                        $(function(){\r\n                            var " +
"$Job_Show_Job_SubTypes_Update_Dialog = null;\r\n\r\n                            $(\'#" +
"Job_Show_Job_SubTypes_Update\').click(function () {\r\n                            " +
"    if (!$Job_Show_Job_SubTypes_Update_Dialog) {\r\n                              " +
"      $Job_Show_Job_SubTypes_Update_Dialog = $(\'#Job_Show_Job_SubTypes_Update_Di" +
"alog\');\r\n                                    $Job_Show_Job_SubTypes_Update_Dialo" +
"g.dialog({\r\n                                        resizable: false,\r\n         " +
"                               modal: true,\r\n                                   " +
"     autoOpen: false,\r\n                                        width: 700,\r\n    " +
"                                    buttons: {\r\n                                " +
"            \"Save\": function () {\r\n                                             " +
"   $(\'#formUpdateJobTypes\').submit();\r\n                                         " +
"       $Job_Show_Job_SubTypes_Update_Dialog.dialog(\"disable\");\r\n                " +
"                            },\r\n                                            Canc" +
"el: function () {\r\n                                                $(this).dialo" +
"g(\"close\");\r\n                                            }\r\n                    " +
"                    }\r\n                                    });\r\n                " +
"                }\r\n\r\n                                $Job_Show_Job_SubTypes_Upda" +
"te_Dialog.dialog(\'open\');\r\n                                return false;\r\n      " +
"                      });\r\n                        });\r\n                    </sc" +
"ript>\r\n                </div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_GenerateDocument_Container\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 149 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.DropDownList("Job_Show_GenerateDocument", Model.DocumentTemplatesSelectListItems));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var gener" +
"atePdfUrl = \'");

            
            #line 152 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             Write(Url.Action(MVC.API.Job.GeneratePdf(Model.Job.Id.ToString(), null)));

            
            #line default
            #line hidden
WriteLiteral(@"?DocumentTemplateId=';
                            var $documentTemplates = $('#Job_Show_GenerateDocument');
                            $documentTemplates.change(function () {
                                var v = $documentTemplates.val();
                                if (v) {
                                    window.location.href = generatePdfUrl + v;
                                    $documentTemplates.val('').blur();
                                }
                            });
                        });
                    </script>
                </div>
            </div>
        </td>
");

            
            #line 166 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device\"");

WriteLiteral(">\r\n                <div>\r\n                    <h2");

WriteLiteral(" id=\"Job_Show_Device_SerialNumber\"");

WriteLiteral(" title=\"Serial Number\"");

WriteLiteral(">");

            
            #line 170 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                           Write(Html.ActionLink(Model.Job.DeviceSerialNumber, MVC.Device.Show(Model.Job.DeviceSerialNumber)));

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n                    <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" id=\"Job_Show_Device_Model_Image\"");

WriteLiteral(" alt=\"Model Image\"");

WriteAttribute("src", Tuple.Create(" src=\"", 10879), Tuple.Create("\"", 10997)
            
            #line 173 "..\..\Views\Job\JobParts\_Subject.cshtml"
        , Tuple.Create(Tuple.Create("", 10885), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.DeviceModel.Image(Model.Job.Device.DeviceModelId, Model.Job.Device.DeviceModel.ImageHash()))
            
            #line default
            #line hidden
, 10885), false)
);

WriteLiteral(" />\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_ComputerName\"");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral(">");

            
            #line 174 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(Model.Job.Device.ComputerName);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_Model\"");

WriteLiteral(" title=\"Model\"");

WriteLiteral(">");

            
            #line 175 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                     Write(Html.ActionLink(Model.Job.Device.DeviceModel.ToString(), MVC.Config.DeviceModel.Index(Model.Job.Device.DeviceModelId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 176 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 176 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Model.Job.Device.DeviceBatch != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Batch\"");

WriteLiteral(" title=\"Batch\"");

WriteLiteral(">");

            
            #line 178 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                         Write(Html.ActionLink(Model.Job.Device.DeviceBatch.Name, MVC.Config.DeviceBatch.Index(Model.Job.Device.DeviceBatchId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 179 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 181 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 181 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Model.Job.Device.DeviceBatch != null)
                        {
                            if (Model.Job.JobTypeId == JobType.JobTypeIds.HWar)
                            {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar\"");

WriteLiteral(">\r\n                                <div>DEVICE WARRANTY</div>\r\n                  " +
"              <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_ValidUntil\"");

WriteLiteral(">");

            
            #line 187 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                          Write(Model.Job.Device.DeviceBatch.WarrantyValidUntil.ToFuzzy("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 188 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 188 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.WarrantyDetails))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                    <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 12575), Tuple.Create("\"", 12640)
, Tuple.Create(Tuple.Create("", 12583), Tuple.Create("Warranty", 12583), true)
, Tuple.Create(Tuple.Create(" ", 12591), Tuple.Create("Details", 12592), true)
, Tuple.Create(Tuple.Create(" ", 12599), Tuple.Create("for", 12600), true)
            
            #line 191 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    , Tuple.Create(Tuple.Create(" ", 12603), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 12604), false)
);

WriteLiteral(">\r\n                                        <div>");

            
            #line 192 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         Write(new HtmlString(Model.Job.Device.DeviceBatch.WarrantyDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                    </div>\r\n");

WriteLiteral("                                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                        $(function () {
                                            var d;
                                            $('#Job_Show_Device_Details_HWar_Details_Button').click(function () {
                                                if (!d)
                                                    d = $('#Job_Show_Device_Details_HWar_Details_Dialog').dialog({
                                                        width: 570,
                                                        modal: true
                                                    });
                                                else
                                                    d.dialog('open');
                                                return false;
                                            });
                                        });
                                    </script>
");

            
            #line 209 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>    \r\n");

            
            #line 211 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }
                            if (Model.Job.JobTypeId == JobType.JobTypeIds.HNWar)
                            {

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar\"");

WriteLiteral(">\r\n                                <div>INSURANCE</div>\r\n                        " +
"        <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_InsuranceSupplier\"");

WriteLiteral(">");

            
            #line 216 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                     Write(Model.Job.Device.DeviceBatch.InsuranceSupplier);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_ValidUntil\"");

WriteLiteral(">");

            
            #line 217 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                           Write(Model.Job.Device.DeviceBatch.InsuredUntil.ToFuzzy("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 218 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 218 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.InsuranceDetails))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                    <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 14823), Tuple.Create("\"", 14889)
, Tuple.Create(Tuple.Create("", 14831), Tuple.Create("Insurance", 14831), true)
, Tuple.Create(Tuple.Create(" ", 14840), Tuple.Create("Details", 14841), true)
, Tuple.Create(Tuple.Create(" ", 14848), Tuple.Create("for", 14849), true)
            
            #line 221 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                      , Tuple.Create(Tuple.Create(" ", 14852), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 14853), false)
);

WriteLiteral(">\r\n                                        <div>");

            
            #line 222 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         Write(new HtmlString(Model.Job.Device.DeviceBatch.InsuranceDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                    </div>\r\n");

WriteLiteral("                                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                        $(function () {
                                            var d;
                                            $('#Job_Show_Device_Details_HNWar_Details_Button').click(function () {
                                                if (!d)
                                                    d = $('#Job_Show_Device_Details_HNWar_Details_Dialog').dialog({
                                                        width: 570,
                                                        modal: true
                                                    });
                                                else
                                                    d.dialog('open');
                                                return false;
                                            });
                                        });
                                    </script>
");

            
            #line 239 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>    \r\n");

            
            #line 241 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

            
            #line 244 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 244 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.DeviceHeld.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                                <tr>\r\n                                    <td>" +
"Location:</td>\r\n                                    <td>");

            
            #line 250 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(Html.TextBoxFor(m => m.Job.DeviceHeldLocation, new { @class = "small discreet" }));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 250 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                      Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 250 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                              Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                                </tr>\r\n                                <tr" +
">\r\n                                    <td>Held Since:</td>\r\n                   " +
"                 <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceHeld\"");

WriteLiteral(">");

            
            #line 254 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceHeld, Model.Job.DeviceHeldTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                </tr>\r\n");

            
            #line 256 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 256 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReadyForReturn.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Ready:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReadyForReturn\"");

WriteLiteral(">");

            
            #line 260 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                  Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReadyForReturn, Model.Job.DeviceReadyForReturnTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 262 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 263 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReturnedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Returned:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReturnedDate\"");

WriteLiteral(">");

            
            #line 267 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReturnedDate, Model.Job.DeviceReturnedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 269 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </table>\r\n\r\n                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(function () {
                                    var $deviceHeldLocation = $('#Job_DeviceHeldLocation');
                                    var $ajaxSave = $deviceHeldLocation.next('.ajaxSave');

                                    $deviceHeldLocation
                                        .watermark('Unknown')
                                        .focus(function () { $deviceHeldLocation.select() })
                                        .keydown(function (e) {
                                            $ajaxSave.show();
                                            if (e.which == 13) {
                                                $(this).blur();
                                            }
                                        }).blur(function () {
                                            $ajaxSave.hide();
                                        })
                                        .change(function () {
                                            $ajaxSave.hide();
                                            $ajaxLoading = $ajaxSave.next('.ajaxLoading').show();
                                            var data = { DeviceHeldLocation: $deviceHeldLocation.val() };
                                            $.ajax({
                                                url: '");

            
            #line 293 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(Url.Action(MVC.API.Job.UpdateDeviceHeldLocation(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral(@"',
                                                dataType: 'json',
                                                data: data,
                                                success: function (d) {
                                                    if (d == 'OK') {
                                                        $ajaxLoading.hide().next('.ajaxOk').show().delay('fast').fadeOut('slow');
                                                    } else {
                                                        $ajaxLoading.hide();
                                                        alert('Unable to update device held location: ' + d);
                                                    }
                                                },
                                                error: function (jqXHR, textStatus, errorThrown) {
                                                    alert('Unable to update device held location: ' + textStatus);
                                                    $ajaxLoading.hide();
                                                }
                                            });
                                        });
                                });
                            </script>
                        </div>
");

            
            #line 313 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 316 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 317 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User\"");

WriteLiteral(">\r\n                <div>\r\n                    <h2");

WriteLiteral(" id=\"Job_Show_User_DisplayName\"");

WriteLiteral(" title=\"Display Name\"");

WriteLiteral(">");

            
            #line 321 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                       Write(Html.ActionLink(Model.Job.User.DisplayName, MVC.User.Show(Model.Job.UserId)));

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n                    <div");

WriteLiteral(" id=\"Job_Show_User_Id\"");

WriteLiteral(" title=\"Id\"");

WriteLiteral(">");

            
            #line 322 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                     Write(Model.Job.UserId);

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" id=\"Job_Show_User_Type\"");

WriteLiteral(" title=\"Type\"");

WriteLiteral(">[");

            
            #line 322 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                    Write(Model.Job.User.Type);

            
            #line default
            #line hidden
WriteLiteral("]</span></div>\r\n");

            
            #line 323 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 323 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (!string.IsNullOrWhiteSpace(Model.Job.User.PhoneNumber))
                    {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_PhoneNumber\"");

WriteLiteral(" title=\"Phone Number\"");

WriteLiteral(">Phone: ");

            
            #line 324 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                Write(Model.Job.User.PhoneNumber);

            
            #line default
            #line hidden
WriteLiteral("</div>");

            
            #line 324 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 325 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (!string.IsNullOrWhiteSpace(Model.Job.User.EmailAddress))
                    {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_EmailAddress\"");

WriteLiteral(" title=\"Email Address\"");

WriteLiteral(">Email: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 21807), Tuple.Create("\"", 21851)
, Tuple.Create(Tuple.Create("", 21814), Tuple.Create("mailto:", 21814), true)
            
            #line 326 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       , Tuple.Create(Tuple.Create("", 21821), Tuple.Create<System.Object, System.Int32>(Model.Job.User.EmailAddress
            
            #line default
            #line hidden
, 21821), false)
);

WriteLiteral(">");

            
            #line 326 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                  Write(Model.Job.User.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("</a></div>");

            
            #line 326 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                             }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 327 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.WaitingForUserAction.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_WaitingForUserAction\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <h4>Awaiting Action</h4>\r\n                        " +
"    Since: ");

            
            #line 331 "..\..\Views\Job\JobParts\_Subject.cshtml"
                              Write(Model.Job.WaitingForUserAction.ToFuzzy());

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");

            
            #line 333 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 336 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n    <tr");

WriteLiteral(" id=\"Job_Show_Subjects_Actions\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job_Actions\"");

WriteLiteral(">\r\n");

            
            #line 340 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 340 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanForceClose())
            { 
                
            
            #line default
            #line hidden
            
            #line 342 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Forcibly Close Job", MVC.API.Job.Close(Model.Job.Id, true), "Job_Show_Job_Actions_ForceClose_Button"));

            
            #line default
            #line hidden
            
            #line 342 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                  

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ForceClose_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Forcibly Close this Job?\"");

WriteLiteral(">\r\n");

            
            #line 344 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 344 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.ForceClose(Model.Job.Id, null, true)))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <p>\r\n                            <span");

WriteLiteral(" class=\"ui-icon ui-icon-alert\"");

WriteLiteral(" style=\"float: left; margin: 0 7px 20px 0;\"");

WriteLiteral("></span>\r\n                            Are you sure?\r\n                        </p>" +
"\r\n");

WriteLiteral("                        <h3>Reason:</h3>\r\n");

WriteLiteral("                        <p>\r\n                            <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                        </p>\r\n");

            
            #line 354 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_ForceClose_Button\');\r\n                        var buttonDia" +
"log = null;\r\n\r\n                        button.click(function () {\r\n             " +
"               if (!buttonDialog) {\r\n                                buttonDialo" +
"g = $(\'#Job_Show_Job_Actions_ForceClose_Dialog\');\r\n                             " +
"   buttonDialog.dialog({\r\n                                    resizable: false,\r" +
"\n                                    modal: true,\r\n                             " +
"       autoOpen: false,\r\n                                    buttons: {\r\n       " +
"                                 \"Forcibly Close Job\": function () {\r\n          " +
"                                  var $this = $(this);\r\n                        " +
"                    $this.dialog(\"disable\");\r\n                                  " +
"          $this.dialog(\"option\", \"buttons\", null);\r\n                            " +
"                $this.find(\'form\').submit();\r\n                                  " +
"      },\r\n                                        Cancel: function () {\r\n       " +
"                                     $(this).dialog(\"close\");\r\n                 " +
"                       }\r\n                                    }\r\n               " +
"                 });\r\n                            }\r\n\r\n                         " +
"   buttonDialog.dialog(\'open\');\r\n                            return false;\r\n    " +
"                    });\r\n                    });\r\n                </script>\r\n");

            
            #line 387 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 389 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 389 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanClose())
            { 
                
            
            #line default
            #line hidden
            
            #line 391 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Close Job", MVC.API.Job.Close(Model.Job.Id, true), "Job_Show_Job_Actions_Close_Button"));

            
            #line default
            #line hidden
            
            #line 391 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                    

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Close_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Close this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <span");

WriteLiteral(" class=\"ui-icon ui-icon-alert\"");

WriteLiteral(" style=\"float: left; margin: 0 7px 20px 0;\"");

WriteLiteral("></span>\r\n                        Are you sure?\r\n                    </p>\r\n      " +
"          </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Close_Button\');\r\n                        var buttonDialog =" +
" null;\r\n                        var buttonLink = button.attr(\'href\');\r\n         " +
"               button.attr(\'href\', \'#\').click(function () {\r\n                   " +
"         if (!buttonDialog){\r\n                                buttonDialog = $(\'" +
"#Job_Show_Job_Actions_Close_Dialog\');\r\n                                buttonDia" +
"log.dialog({\r\n                                    resizable: false,\r\n           " +
"                         modal: true,\r\n                                    autoO" +
"pen: false,\r\n                                    buttons: {\r\n                   " +
"                     \"Close Job\": function () {\r\n                               " +
"             var $this = $(this);\r\n                                            $" +
"this.dialog(\"disable\");\r\n                                            $this.dialo" +
"g(\"option\", \"buttons\", null);\r\n                                            windo" +
"w.location.href = buttonLink;\r\n                                        },\r\n     " +
"                                   Cancel: function () {\r\n                      " +
"                      $(this).dialog(\"close\");\r\n                                " +
"        }\r\n                                    }\r\n                              " +
"  });\r\n                            }\r\n\r\n                            buttonDialog" +
".dialog(\'open\');\r\n                            return false;\r\n                   " +
"     });\r\n                    });\r\n                </script>\r\n");

            
            #line 429 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 430 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanReopen())
            { 
                
            
            #line default
            #line hidden
            
            #line 432 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Reopen Job", MVC.API.Job.Reopen(Model.Job.Id, true), "Job_Show_Job_Actions_Reopen_Button"));

            
            #line default
            #line hidden
            
            #line 432 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                       

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Reopen_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Reopen this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <span");

WriteLiteral(" class=\"ui-icon ui-icon-alert\"");

WriteLiteral(" style=\"float: left; margin: 0 7px 20px 0;\"");

WriteLiteral("></span>\r\n                        Are you sure?\r\n                    </p>\r\n      " +
"          </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Reopen_Button\');\r\n                        var buttonDialog " +
"= null;\r\n                        var buttonLink = button.attr(\'href\');\r\n        " +
"                button.attr(\'href\', \'#\');\r\n                        button.click(" +
"function () {\r\n                            if (!buttonDialog){\r\n                " +
"                buttonDialog = $(\'#Job_Show_Job_Actions_Reopen_Dialog\');\r\n      " +
"                          buttonDialog.dialog({\r\n                               " +
"     resizable: false,\r\n                                    modal: true,\r\n      " +
"                              autoOpen: false,\r\n                                " +
"    buttons: {\r\n                                        \"Reopen\": function () {\r" +
"\n                                            var $this = $(this);\r\n             " +
"                               $this.dialog(\"disable\");\r\n                       " +
"                     $this.dialog(\"option\", \"buttons\", null);\r\n                 " +
"                           window.location.href = buttonLink;\r\n                 " +
"                       },\r\n                                        Cancel: funct" +
"ion () {\r\n                                            $(this).dialog(\"close\");\r\n" +
"                                        }\r\n                                    }" +
"\r\n                                });\r\n                            }\r\n          " +
"                  \r\n                            buttonDialog.dialog(\'open\');\r\n  " +
"                          return false;\r\n                        });\r\n          " +
"          });\r\n                </script>\r\n");

            
            #line 471 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 472 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanDelete())
            { 
                
            
            #line default
            #line hidden
            
            #line 474 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Delete Job", MVC.API.Job.Delete(Model.Job.Id, true), "Job_Show_Job_Actions_Delete_Button"));

            
            #line default
            #line hidden
            
            #line 474 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                       

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <span");

WriteLiteral(" class=\"ui-icon ui-icon-alert\"");

WriteLiteral(" style=\"float: left; margin: 0 7px 20px 0;\"");

WriteLiteral("></span>\r\n                        This item will be permanently deleted and canno" +
"t be recovered. Are you sure?\r\n                    </p>\r\n                </div>\r" +
"\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_Delete_Button\');\r\n                        var buttonDialog " +
"= null;\r\n                        var buttonLink = button.attr(\'href\');\r\n        " +
"                button.attr(\'href\', \'#\');\r\n                        button.click(" +
"function () {\r\n                            if (!buttonDialog){\r\n                " +
"                buttonDialog = $(\'#Job_Show_Job_Actions_Delete_Dialog\');\r\n      " +
"                          buttonDialog.dialog({\r\n                               " +
"     resizable: false,\r\n                                    modal: true,\r\n      " +
"                              autoOpen: false,\r\n                                " +
"    buttons: {\r\n                                        \"Delete\": function () {\r" +
"\n                                            var $this = $(this);\r\n             " +
"                               $this.dialog(\"disable\");\r\n                       " +
"                     $this.dialog(\"option\", \"buttons\", null);\r\n                 " +
"                           window.location.href = buttonLink;\r\n                 " +
"                       },\r\n                                        Cancel: funct" +
"ion () {\r\n                                            $(this).dialog(\"close\");\r\n" +
"                                        }\r\n                                    }" +
"\r\n                                });\r\n                            }\r\n\r\n        " +
"                    buttonDialog.dialog(\'open\');\r\n                            re" +
"turn false;\r\n                        });\r\n                    });\r\n             " +
"   </script>\r\n");

            
            #line 513 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 514 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogWarranty())
            { 
                
            
            #line default
            #line hidden
            
            #line 516 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Log Warranty", MVC.Job.LogWarranty(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogWarranty_Button"));

            
            #line default
            #line hidden
            
            #line 516 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 518 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanWarrantyCompleted())
            { 
                
            
            #line default
            #line hidden
            
            #line 520 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Warranty Complete", MVC.API.Job.UpdateWarrantyExternalCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_WarrantyComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 520 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 522 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanInsuranceClaimFormSent())
            { 
                
            
            #line default
            #line hidden
            
            #line 524 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Insurance Claim Form Sent", MVC.API.Job.UpdateInsuranceClaimFormSentDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_InsuranceClaimFormSent_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 524 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                                
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 526 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogRepair())
            { 
                
            
            #line default
            #line hidden
            
            #line 528 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Repairs Logged", MVC.API.Job.LogRepair(Model.Job.Id, null, null, true), "Job_Show_Job_Actions_LogRepair_Button"));

            
            #line default
            #line hidden
            
            #line 528 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                             

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_LogRepair_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Repairs Logged\"");

WriteLiteral(">\r\n");

            
            #line 530 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 530 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.LogRepair(Model.Job.Id, null, null, true)))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <h3>Repairer Name:</h3>\r\n");

WriteLiteral("                        <p>\r\n                            <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"Job_Show_Job_Actions_LogRepair_Dialog_RepairerName\"");

WriteLiteral(" name=\"RepairerName\"");

WriteLiteral(" />\r\n                        </p>\r\n");

WriteLiteral("                        <h3>Repairer Reference:</h3>\r\n");

WriteLiteral("                        <p>\r\n                            <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"Job_Show_Job_Actions_LogRepair_Dialog_RepairerReference\"");

WriteLiteral(" name=\"RepairerReference\"");

WriteLiteral(" />\r\n                        </p>\r\n");

            
            #line 540 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_LogRepair_Button\');\r\n                        var buttonDial" +
"og = null;\r\n                        button.attr(\'href\', \'#\');\r\n                 " +
"       button.click(function () {\r\n                            if (!buttonDialog" +
"){\r\n                                buttonDialog = $(\'#Job_Show_Job_Actions_LogR" +
"epair_Dialog\');\r\n                                buttonDialog.dialog({\r\n        " +
"                            resizable: false,\r\n                                 " +
"   height: 240,\r\n                                    modal: true,\r\n             " +
"                       autoOpen: false,\r\n                                    but" +
"tons: {\r\n                                        \"Log Repairs\": function () {\r\n " +
"                                           var $this = $(this);\r\n               " +
"                             $this.dialog(\"disable\");\r\n                         " +
"                   $this.dialog(\"option\", \"buttons\", null);\r\n                   " +
"                         $this.find(\'form\').submit();\r\n                         " +
"               },\r\n                                        Cancel: function () {" +
"\r\n                                            $(this).dialog(\"close\");\r\n        " +
"                                }\r\n                                    }\r\n      " +
"                          });\r\n                            }\r\n\r\n                " +
"            buttonDialog.dialog(\'open\');\r\n\r\n                            $(\'#Job_" +
"Show_Job_Actions_LogRepair_Dialog_RepairerName\').val($(\'#Job_JobMetaNonWarranty_" +
"RepairerName\').val()).focus();\r\n                            $(\'#Job_Show_Job_Act" +
"ions_LogRepair_Dialog_RepairerReference\').val($(\'#Job_JobMetaNonWarranty_Repaire" +
"rReference\').val());\r\n\r\n                            return false;\r\n             " +
"           });\r\n                    });\r\n                </script>\r\n");

            
            #line 578 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 579 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanRepairComplete())
            { 
                
            
            #line default
            #line hidden
            
            #line 581 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Repairs Complete", MVC.API.Job.UpdateNonWarrantyRepairerCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_RepairComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 581 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 583 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanConvertHWarToHNWar())
            { 
                
            
            #line default
            #line hidden
            
            #line 585 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Convert to Non-Warranty", MVC.API.Job.ConvertHWarToHNWar(Model.Job.Id, true), "Job_Show_Job_Actions_ConvertToHNWar_Button"));

            
            #line default
            #line hidden
            
            #line 585 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                        

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ConvertToHNWar_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Convert this Job?\"");

WriteLiteral(">\r\n                    <p>\r\n                        <span");

WriteLiteral(" class=\"ui-icon ui-icon-alert\"");

WriteLiteral(" style=\"float: left; margin: 0 7px 20px 0;\"");

WriteLiteral("></span>\r\n                        This process is not reversible.<br />\r\n        " +
"                Are you sure?\r\n                    </p>\r\n                </div>\r" +
"\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_ConvertToHNWar_Button\');\r\n                        var butto" +
"nDialog = null;\r\n                        var buttonLink = button.attr(\'href\');\r\n" +
"                        button.attr(\'href\', \'#\');\r\n                        butto" +
"n.click(function () {\r\n                            if (!buttonDialog){\r\n        " +
"                        buttonDialog = $(\'#Job_Show_Job_Actions_ConvertToHNWar_D" +
"ialog\');\r\n                                buttonDialog.dialog({\r\n               " +
"                     resizable: false,\r\n                                    moda" +
"l: true,\r\n                                    autoOpen: false,\r\n                " +
"                    buttons: {\r\n                                        \"Convert" +
"\": function () {\r\n                                            var $this = $(this" +
");\r\n                                            $this.dialog(\"disable\");\r\n      " +
"                                      $this.dialog(\"option\", \"buttons\", null);\r\n" +
"                                            window.location.href = buttonLink;\r\n" +
"                                        },\r\n                                    " +
"    Cancel: function () {\r\n                                            $(this).d" +
"ialog(\"close\");\r\n                                        }\r\n                    " +
"                }\r\n                                });\r\n                        " +
"    }\r\n\r\n                            buttonDialog.dialog(\'open\');\r\n             " +
"               return false;\r\n                        });\r\n                     " +
"   \r\n                    });\r\n                </script>\r\n");

            
            #line 626 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </td>\r\n");

            
            #line 628 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 628 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device_Actions\"");

WriteLiteral(">\r\n");

            
            #line 631 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 631 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceHeld())
                { 
                    
            
            #line default
            #line hidden
            
            #line 633 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Held", MVC.API.Job.DeviceHeld(Model.Job.Id, true), "Job_Show_Device_Actions_Held_Button"));

            
            #line default
            #line hidden
            
            #line 633 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                          
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 635 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReadyForReturn())
                { 
                    
            
            #line default
            #line hidden
            
            #line 637 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Ready For Return", MVC.API.Job.DeviceReadyForReturn(Model.Job.Id, true), "Job_Show_Device_Actions_DeviceReadyForReturn_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 637 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                         
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 639 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReturned())
                { 
                    
            
            #line default
            #line hidden
            
            #line 641 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Returned", MVC.API.Job.DeviceReturned(Model.Job.Id, true), "Job_Show_Device_Actions_DeviceReturned_Button", Model.Job.CanDeviceReadyForReturn() ? null : "alert"));

            
            #line default
            #line hidden
            
            #line 641 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                                  
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n");

            
            #line 644 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 645 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User_Actions\"");

WriteLiteral(">\r\n\r\n\r\n");

            
            #line 650 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 650 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanWaitingForUserAction())
                { 

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Awaiting Action</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 654 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 654 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.WaitingForUserAction(Model.Job.Id, null, true)))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Reason:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 660 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_WaitingForUserAction_Button\');\r\n                  " +
"          var buttonDialog = null;\r\n\r\n                            button.click(f" +
"unction () {\r\n                                if (!buttonDialog) {\r\n            " +
"                        buttonDialog = $(\'#Job_Show_User_Actions_WaitingForUserA" +
"ction_Dialog\');\r\n                                    buttonDialog.dialog({\r\n    " +
"                                    resizable: false,\r\n                         " +
"               modal: true,\r\n                                        autoOpen: f" +
"alse,\r\n                                        buttons: {\r\n                     " +
"                       \"Waiting for User Action\": function () {\r\n               " +
"                                 var $this = $(this);\r\n                         " +
"                       $this.dialog(\"disable\");\r\n                               " +
"                 $this.dialog(\"option\", \"buttons\", null);\r\n                     " +
"                           $this.find(\'form\').submit();\r\n                       " +
"                     },\r\n                                            Cancel: fun" +
"ction () {\r\n                                                $(this).dialog(\"clos" +
"e\");\r\n                                            }\r\n                           " +
"             }\r\n                                    });\r\n                       " +
"         }\r\n\r\n                                buttonDialog.dialog(\'open\');\r\n    " +
"                            return false;\r\n                            });\r\n    " +
"                    });\r\n                    </script>\r\n");

            
            #line 693 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 694 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanNotWaitingForUserAction())
                { 

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button alert small\"");

WriteLiteral(">Action Resolved</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Not Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 698 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 698 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.NotWaitingForUserAction(Model.Job.Id, null, true)))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Resolution:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Resolution\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 704 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_NotWaitingForUserAction_Button\');\r\n               " +
"             var buttonDialog = null;\r\n\r\n                            button.clic" +
"k(function () {\r\n                                if (!buttonDialog) {\r\n         " +
"                           buttonDialog = $(\'#Job_Show_User_Actions_NotWaitingFo" +
"rUserAction_Dialog\');\r\n                                    buttonDialog.dialog({" +
"\r\n                                        resizable: false,\r\n                   " +
"                     height: 240,\r\n                                        modal" +
": true,\r\n                                        autoOpen: false,\r\n             " +
"                           buttons: {\r\n                                         " +
"   \"Not Waiting for User Action\": function () {\r\n                               " +
"                 var $this = $(this);\r\n                                         " +
"       $this.dialog(\"disable\");\r\n                                               " +
" $this.dialog(\"option\", \"buttons\", null);\r\n                                     " +
"           $this.find(\'form\').submit();\r\n                                       " +
"     },\r\n                                            Cancel: function () {\r\n    " +
"                                            $(this).dialog(\"close\");\r\n          " +
"                                  }\r\n                                        }\r\n" +
"                                    });\r\n                                }\r\n\r\n  " +
"                              buttonDialog.dialog(\'open\');\r\n                    " +
"            return false;\r\n                            });\r\n                    " +
"    });\r\n                    </script>\r\n");

            
            #line 738 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n");

            
            #line 741 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n</table>\r\n");

        }
    }
}
#pragma warning restore 1591
