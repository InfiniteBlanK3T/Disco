@model Disco.Web.Areas.Config.Models.SystemConfig.IndexModel
@{
    Authorization.Require(Claims.Config.System.Show);

    var canConfigProxy = Authorization.Has(Claims.Config.System.ConfigureProxy);

    ViewBag.Title = Html.ToBreadcrumb("Configuration", MVC.Config.Config.Index(), "System");
}
<div class="form" style="width: 450px">
    <table>
        <tr>
            <th style="width: 135px">Disco Version:
            </th>
            <td>
                <div>
                    <code>@Model.DiscoVersion.ToString(4)</code>
                </div>
                <div class="smallMessage" title="@Model.DiscoVersionBuilt.ToFullDateTime()">
                    Built @CommonHelpers.FriendlyDate(Model.DiscoVersionBuilt, "Unknown")
                </div>
            </td>
        </tr>
        <tr>
            <th style="width: 135px">Database Connection:
            </th>
            <td>
                <table class="sub">
                    <tr>
                        <th>Server:</th>
                        <td><span class="code">@Model.DatabaseServer</span></td>
                    </tr>
                    <tr>
                        <th>Database:</th>
                        <td><span class="code">@Model.DatabaseName</span></td>
                    </tr>
                    <tr>
                        <th>Authentication:</th>
                        <td>@Model.DatabaseAuthentication</td>
                    </tr>
                    @{if (Model.DatabaseSqlAuthUsername != null)
                      {
                        <tr>
                            <th>SQL&nbsp;User:</th>
                            <td><span class="code">@Model.DatabaseSqlAuthUsername</span></td>
                        </tr>      
                      }
                    }
                </table>
            </td>
        </tr>
        <tr>
            <th style="width: 135px">Data Store Location:
            </th>
            <td>
                <span class="code">@Model.DataStoreLocation</span>
            </td>
        </tr>
    </table>
</div>
<div class="form" style="width: 450px; margin-top: 15px;">
    <h2>Updates</h2>
    <table>
        @{
            if (Model.UpdateLatestResponse == null)
            {
            <tr>
                <th style="width: 135px">Last Check:
                </th>
                <td>
                    <div class="error"><i class="fa fa-exclamation-circle fa-lg"></i>&nbsp;Never</div>
                </td>
            </tr>
            }
            else
            {
            <tr>
                <th style="width: 135px">Last Run:
                </th>
                <td>
                    <span>@CommonHelpers.FriendlyDate(Model.UpdateLatestResponse.ResponseTimestamp)</span>
                </td>
            </tr>
                if (Model.UpdateLatestResponse.IsUpdatable(typeof(DiscoApplication).Assembly.GetName().Version))
                {
            <tr>
                <th style="width: 135px">Update Available:
                </th>
                <td>
                    <div>
                        <i class="fa fa-info-circle fa-lg information"></i>&nbsp;Version @(Model.UpdateLatestResponse.Version) is available
                    </div>
                    <div class="smallMessage">
                        [Released @(CommonHelpers.FriendlyDate(Model.UpdateLatestResponse.VersionReleasedTimestamp))]
                    </div>
                    <div class="smallMessage">@(new HtmlString(Model.UpdateLatestResponse.Blurb))</div>
                    <a href="@(Model.UpdateLatestResponse.UrlLink)" target="_blank">Download Now</a>
                </td>
            </tr>
                }
                else
                {
            <tr>
                <th style="width: 135px">Status:
                </th>
                <td>
                    <i class="fa fa-check-square fa-lg success"></i>&nbsp;<span>The latest version is installed</span>
                </td>
            </tr>
                }
            }
        }
        <tr>
            <th style="width: 135px">Check for Update:</th>
            <td>
                @{
                    if (Model.UpdateRunningStatus == null)
                    {
                    <span>@Html.ActionLinkSmallButton("Check Now", MVC.API.System.UpdateCheck())</span>
                    <span class="smallMessage">[Will run automatically <strong>@CommonHelpers.FriendlyDate(Model.UpdateNextScheduled, "Unknown")</strong>]</span>
                    }
                    else
                    {
                    <span>@Html.ActionLink("View Status", MVC.Config.Logging.TaskStatus(Model.UpdateRunningStatus.SessionId))</span>
                    <span class="smallMessage">[Running Now]</span>
                    }
                }
                @if (Model.UpdateBetaDeployment)
                {
                    <hr />
                    <span class="alert"><i class="fa fa-info-circle fa-lg"></i>&nbsp;Beta Deployment</span>
                }
            </td>
        </tr>
    </table>
</div>
@if (canConfigProxy)
{
    using (Html.BeginForm())
    { 
    <div class="form" style="width: 450px; margin-top: 15px;">
        <h2>Proxy Settings</h2>
        <table>
            <tr>
                <th style="width: 135px">Address:
                </th>
                <td>
                    @Html.EditorFor(m => m.ProxyAddress)<br />
                    @Html.ValidationMessageFor(m => m.ProxyAddress)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Port:
                </th>
                <td>
                    @Html.EditorFor(m => m.ProxyPort)<br />
                    @Html.ValidationMessageFor(m => m.ProxyPort)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Username:
                </th>
                <td>
                    @Html.EditorFor(m => m.ProxyUsername)<br />
                    @Html.ValidationMessageFor(m => m.ProxyUsername)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Password:
                </th>
                <td>
                    @Html.EditorFor(m => m.ProxyPassword)<br />
                    @Html.ValidationMessageFor(m => m.ProxyPassword)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">&nbsp;
                </th>
                <td>
                    <input type="submit" class="button small" value="Save Proxy Settings" />
                </td>
            </tr>
        </table>
    </div>
    }
}
else
{
    <div class="form" style="width: 450px; margin-top: 15px;">
        <h2>Proxy Settings</h2>
        <table>
            <tr>
                <th style="width: 135px">Address:
                </th>
                <td>
                    @Html.DisplayFor(m => m.ProxyAddress)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Port:
                </th>
                <td>
                    @Html.DisplayFor(m => m.ProxyPort)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Username:
                </th>
                <td>
                    @Html.DisplayFor(m => m.ProxyUsername)
                </td>
            </tr>
            <tr>
                <th style="width: 135px">Password:
                </th>
                <td>********
                </td>
            </tr>
        </table>
    </div>
}
<div class="actionBar">
    @Html.ActionLinkButton("Update Device Last Network Logons", MVC.API.System.UpdateLastNetworkLogonDates())
</div>
